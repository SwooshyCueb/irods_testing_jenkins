ARG base_image=ubuntu:16.04
FROM $base_image

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update -qq && \
    apt-get install -y --no-install-recommends apt-utils && \
    apt-get install -y --no-install-recommends tzdata && \
    ln -fs /usr/share/zoneinfo/US/Eastern /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    apt-get upgrade -y && \
    apt-get autoremove -y --purge && \
    apt-mark showauto | xargs -r apt-mark manual && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/*

RUN apt-get update -qq && \
    apt-get install -y \
        apt-transport-https \
        wget \
        lsb-release \
        sudo \
        ca-certificates \
        curl \
        gnupg-agent \
        software-properties-common \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/*

RUN apt-get install -y tzdata &&\

RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && \
    apt-key fingerprint 0EBFCD88 && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/*

RUN apt-get update -qq && \
    apt-get install -y \
        make \
        zip \
        netcat \
        docker-ce \
        libffi-dev \
        libssl-dev \
        libfuse2 \
        lsof \
        rsyslog \
        gdebi \
        vim \
        fuse \
        python python-psutil \
        python-requests \
        python-jsonschema \
        python-pip \
        git \
        net-tools \
        iputils-ping \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/*

RUN pip --no-cache-dir install --upgrade pip
RUN pip --no-cache-dir install pygithub==1.45
RUN pip --no-cache-dir install -U setuptools
RUN pip --no-cache-dir install -U pyOpenSSL
RUN pip --no-cache-dir install -U cryptography

RUN cd /tmp && \
    git clone https://github.com/irods/irods_python_ci_utilities && \
    cd irods_python_ci_utilities && \
    python setup.py install && \
    cd .. && \
    rm -rf irods_python_ci_utilities

ENV IRODS_BUILD_DIRECTORY=/irods_build
ENV IRODS_TEST_RESULTS=/irods_test_env

RUN mkdir -p $IRODS_BUILD_DIRECTORY && \
    chmod -R 775 $IRODS_BUILD_DIRECTORY

RUN mkdir -p $IRODS_TEST_RESULTS &&\
    chmod -R 775 $IRODS_TEST_RESULTS

RUN echo exit 0 > /usr/sbin/policy-rc.d
